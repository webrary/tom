function selectText(){{var t=document.getElementById("text").value,e=parseInt(document.getElementById("index").value,10);ts.tom.core.Selection.from(t,e,!0)}}function red(){var t=ts.tom.core.Selection.from();$(t.getTextNodes()).wrap("<span style='color: red'/>")}function green(){var t=ts.tom.core.Selection.from();$(t.getTextNodes()).wrap("<span style='color: green'/>")}var ts=ts||{};ts.tom=ts.tom||{},ts.tom.core=ts.tom.core||{},ts.tom.core.Selection=function(t){this.range_=t},ts.tom.core.Selection.prototype.getTextNodes=function(){"use strict";function t(t,e){var n=t.splitText(e);return n.startPosition=t.startPosition+ts.tom.utils.string.compact(t.data).length,n.endPosition=t.endPosition,t.endPosition=n.startPosition-1,n}var e=this.range_.startContainer,n=this.range_.endContainer,o=this.range_.startOffset,r=this.range_.endOffset,s=document.body.data.tNodes,i=s.indexOf(e),a=t(e,o);a.length>0&&s.splice(i+1,0,a),n===e&&(n=a,r-=o);var c=s.indexOf(n),u=t(n,r);return u.length>0&&s.splice(c+1,0,u),s.slice(i+1,c+1)},ts.tom.core.Selection.prototype.getIndex=function(){"use strict";var t=this.range_.endContainer;if(!(t instanceof Text&&this.range_.startContainer instanceof Text))throw new Error("illegal selection");var e=this.range_.endOffset,n=ts.tom.utils.string.compact(t.substringData(0,e)),o=n?n.length:0;if(1>o)throw new Error("illegal selection");var r=ts.tom.utils.string.compact(this.range_.toString());return ts.tom.utils.string.times(document.body.data.tText.substr(0,t.startPosition+o),r)},ts.tom.core.Selection.prototype.getSelection=function(){var t=window.getSelection();return t.rangeCount<1&&t.addRange(this.range_),t},ts.tom.core.Selection.from=function(t,e,n){var o=window.getSelection();if(!t&&o.rangeCount>0)return new ts.tom.core.Selection(window.getSelection().getRangeAt(0));var r=ts.tom.core.Selection.rangeFrom_(t,e);return n&&(o.removeAllRanges(),o.addRange(r)),new ts.tom.core.Selection(r)},ts.tom.core.Selection.rangeFrom_=function(t,e){"use strict";function n(t,e,n){for(var o=0,r=0;e+n>o;r++)/\s+/m.test(t[r])||o++;return r-n}if(t){var o=document.body.data.tText,r=document.body.data.tNodes,s=document.createRange(),i=ts.tom.utils.string.compact(t),a=ts.tom.utils.string.nthIndexOf(o,i,e||1);if(a>-1){for(var c=a+r[0].startPosition,u=c+i.length,l=null,m=null,d=0;d<r.length;d++){var g=r[d];if(!l&&g.endPosition>=c&&(l=r[d]),g.startPosition>=u){m=r[d-1];break}}if(null!==l){m=m||r[r.length-1];var f=n(l.data,c-l.startPosition,1),p=n(m.data,u-m.startPosition,0);s.setStart(l,f),s.setEnd(m,p)}}return s}return document.createRange()},window.addEventListener("load",function(){"use strict";function t(t){function e(t){if(3===t.nodeType&&/\S/.test(t.data))n.push(t);else if(1===t.nodeType&&!o.test(t,null))for(var r=0,s=t.childNodes.length;s>r;++r)e(t.childNodes[r])}var n=[],o={elements:["applet","area","base","basefont","bdo","button","frame","frameset","iframe","head","hr","img","input","link","map","meta","noframes","noscript","optgroup","option","param","script","select","style","textarea","title"],test:function(t,e){var n=e||this.elements;return n.indexOf(t.tagName.toLowerCase())>-1}};return e(t),n}var e=t(document.body),n=0,o="";e.forEach(function(t){t.startPosition=n;var e=ts.tom.utils.string.compact(t.data);o+=e,n+=e.length,t.endPosition=n-1}),document.body.data={tNodes:e,tText:o}});var ts=ts||{};ts.tom=ts.tom||{},ts.tom.utils=ts.tom.utils||{},ts.tom.utils.string=ts.tom.utils.string||{},ts.tom.utils.string.nthIndexOf=function(t,e,n){"use strict";var o=0,r=-2;for(n=(n=parseInt(n,10))&&n>0?n:1;n>o&&-1!==r;)r=t.indexOf(e,r+1),o++;return r},ts.tom.utils.string.occurrences=function(t,e){"use strict";var n=0,o=-2,r=[];if(e.length<1)return[{nth:Number.POSITIVE_INFINITY,position:Number.POSITIVE_INFINITY},{nth:Number.POSITIVE_INFINITY,position:-1}];for(;-1!==o&&(o=t.indexOf(e,o+1),!(0>o));)r.push({nth:++n,position:o});return r},ts.tom.utils.string.times=function(t,e){"use strict";var n=ts.tom.utils.string.occurrences(t,e),o=n[n.length-1];return o?o.nth:0},ts.tom.utils.string.compact=function(t){"use strict";return t.replace(/\s+/gm,"")},ts.tom.utils.string.trim=function(t){"use strict";return t.replace(/(^\s*)|(\s*$)/g,"")};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4L21haW4uanMiLCJ0b20vY29yZS9zZWxlY3Rpb24uanMiLCJ0b20vdXRpbHMvc3RyaW5nLmpzIl0sIm5hbWVzIjpbInNlbGVjdFRleHQiLCJ0ZXh0IiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInZhbHVlIiwibnRoIiwicGFyc2VJbnQiLCJ0cyIsInRvbSIsImNvcmUiLCJTZWxlY3Rpb24iLCJmcm9tIiwicmVkIiwic2VsZWN0aW9uIiwiJCIsImdldFRleHROb2RlcyIsIndyYXAiLCJncmVlbiIsInJhbmdlIiwidGhpcyIsInJhbmdlXyIsInByb3RvdHlwZSIsInNwbGl0IiwiY29udGFpbmVyIiwib2Zmc2V0IiwicnAiLCJzcGxpdFRleHQiLCJzdGFydFBvc2l0aW9uIiwidXRpbHMiLCJzdHJpbmciLCJjb21wYWN0IiwiZGF0YSIsImxlbmd0aCIsImVuZFBvc2l0aW9uIiwic2MiLCJlYyIsInNvIiwic3RhcnRPZmZzZXQiLCJlbyIsImVuZE9mZnNldCIsImJOb2RlcyIsImJvZHkiLCJ0Tm9kZXMiLCJzaSIsImluZGV4T2YiLCJzcnAiLCJzcGxpY2UiLCJlaSIsImVycCIsInNsaWNlIiwiZ2V0SW5kZXgiLCJlbmRDb250YWluZXIiLCJUZXh0Iiwic3RhcnRDb250YWluZXIiLCJFcnJvciIsImNIZWFkIiwic3Vic3RyaW5nRGF0YSIsImNMZW5ndGgiLCJjVGV4dCIsInRvU3RyaW5nIiwidGltZXMiLCJ0VGV4dCIsInN1YnN0ciIsImdldFNlbGVjdGlvbiIsIndpbmRvdyIsInJhbmdlQ291bnQiLCJhZGRSYW5nZSIsIm9wdF90ZXh0Iiwib3B0X250aCIsIm9wdF9zZWxlY3QiLCJnZXRSYW5nZUF0IiwicmFuZ2VGcm9tXyIsInJlbW92ZUFsbFJhbmdlcyIsInN0ciIsImNvdW50IiwiaXNTdGFydCIsImkiLCJqIiwidGVzdCIsImJUZXh0IiwiY3JlYXRlUmFuZ2UiLCJpbmRleCIsIm50aEluZGV4T2YiLCJjU3RhcnRQb3MiLCJjRW5kUG9zIiwibm9kZSIsInNldFN0YXJ0Iiwic2V0RW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsImVsZW1lbnQiLCJub2RlVHlwZSIsIm5vZGVzIiwicHVzaCIsImVsZXNUb1NraXAiLCJsZW4iLCJjaGlsZE5vZGVzIiwiZWxlbWVudHMiLCJsaXN0IiwidGFnTmFtZSIsInRvTG93ZXJDYXNlIiwiYm9keU5vZGVzIiwicG9zaXRpb24iLCJjQm9keVRleHQiLCJmb3JFYWNoIiwiY29udGVudCIsInNlYXJjaFN0cmluZyIsIm9jY3VycmVuY2VzIiwicmVzdWx0IiwiTnVtYmVyIiwiUE9TSVRJVkVfSU5GSU5JVFkiLCJvY2N1cnMiLCJ0ZW1wIiwicmVwbGFjZSIsInRyaW0iXSwibWFwcGluZ3MiOiJBQUFBLFFBQUFBLGNBQ0EsQ0FBQSxHQUFBQyxHQUFBQyxTQUFBQyxlQUFBLFFBQUFDLE1BQ0FDLEVBQUFDLFNBQUFKLFNBQUFDLGVBQUEsU0FBQUMsTUFBQSxHQUNBRyxJQUFBQyxJQUFBQyxLQUFBQyxVQUFBQyxLQUFBVixFQUFBSSxHQUFBLElBR0EsUUFBQU8sT0FDQSxHQUFBQyxHQUFBTixHQUFBQyxJQUFBQyxLQUFBQyxVQUFBQyxNQUNBRyxHQUFBRCxFQUFBRSxnQkFBQUMsS0FBQSw4QkFHQSxRQUFBQyxTQUNBLEdBQUFKLEdBQUFOLEdBQUFDLElBQUFDLEtBQUFDLFVBQUFDLE1BQ0FHLEdBQUFELEVBQUFFLGdCQUFBQyxLQUFBLGdDQ2JBLEdBQUFULElBQUFBLE1BQ0FBLElBQUFDLElBQUFELEdBQUFDLFFBQ0FELEdBQUFDLElBQUFDLEtBQUFGLEdBQUFDLElBQUFDLFNBUUFGLEdBQUFDLElBQUFDLEtBQUFDLFVBQUEsU0FBQVEsR0FLQUMsS0FBQUMsT0FBQUYsR0FRQVgsR0FBQUMsSUFBQUMsS0FBQUMsVUFBQVcsVUFBQU4sYUFBQSxXQUNBLFlBT0EsU0FBQU8sR0FBQUMsRUFBQUMsR0FDQSxHQUFBQyxHQUFBRixFQUFBRyxVQUFBRixFQUlBLE9BSEFDLEdBQUFFLGNBQUFKLEVBQUFJLGNBQUFwQixHQUFBQyxJQUFB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QUNBLElBQUE3QyxHQUFBLEVBQUF5QyxFQUFBLEdBQUFNLElBQ0EsSUFBQUYsRUFBQXpFLE9BQUEsRUFDQSxRQUNBM0IsSUFBQXVHLE9BQUFDLGtCQUFBUixTQUFBTyxPQUFBQyxvQkFDQXhHLElBQUF1RyxPQUFBQyxrQkFBQVIsU0FBQSxJQUdBLE1BQUEsS0FBQUEsSUFDQUEsRUFBQUcsRUFBQTVELFFBQUE2RCxFQUFBSixFQUFBLEtBQ0EsRUFBQUEsS0FHQU0sRUFBQWYsTUFBQXZGLE1BQUF1RCxFQUFBeUMsU0FBQUEsR0FFQSxPQUFBTSxJQVVBcEcsR0FBQUMsSUFBQW9CLE1BQUFDLE9BQUErQixNQUFBLFNBQUE0QyxFQUFBQyxHQUNBLFlBQ0EsSUFBQUssR0FBQXZHLEdBQUFDLElBQUFvQixNQUFBQyxPQUFBNkUsWUFBQUYsRUFBQUMsR0FDQU0sRUFBQUQsRUFBQUEsRUFBQTlFLE9BQUEsRUFDQSxPQUFBK0UsR0FBQUEsRUFBQTFHLElBQUEsR0FRQUUsR0FBQUMsSUFBQW9CLE1BQUFDLE9BQUFDLFFBQUEsU0FBQTBFLEdBQ0EsWUFDQSxPQUFBQSxHQUFBUSxRQUFBLFFBQUEsS0FRQXpHLEdBQUFDLElBQUFvQixNQUFBQyxPQUFBb0YsS0FBQSxTQUFBVCxHQUNBLFlBQ0EsT0FBQUEsR0FBQVEsUUFBQSxpQkFBQSIsImZpbGUiOiJpbmRleC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBzZWxlY3RUZXh0KGluZGV4KSB7XHJcbiAgdmFyIHRleHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGV4dCcpLnZhbHVlO1xyXG4gIHZhciBudGggPSBwYXJzZUludChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5kZXgnKS52YWx1ZSwgMTApO1xyXG4gIHZhciBzZWxlY3Rpb24gPSB0cy50b20uY29yZS5TZWxlY3Rpb24uZnJvbSh0ZXh0LCBudGgsIHRydWUpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZWQoKSB7XHJcbiAgdmFyIHNlbGVjdGlvbiA9IHRzLnRvbS5jb3JlLlNlbGVjdGlvbi5mcm9tKCk7XHJcbiAgJChzZWxlY3Rpb24uZ2V0VGV4dE5vZGVzKCkpLndyYXAoXCI8c3BhbiBzdHlsZT0nY29sb3I6IHJlZCcvPlwiKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ3JlZW4oaW5kZXgpIHtcclxuICB2YXIgc2VsZWN0aW9uID0gdHMudG9tLmNvcmUuU2VsZWN0aW9uLmZyb20oKTtcclxuICAkKHNlbGVjdGlvbi5nZXRUZXh0Tm9kZXMoKSkud3JhcChcIjxzcGFuIHN0eWxlPSdjb2xvcjogZ3JlZW4nLz5cIik7XHJcbn1cclxuIiwidmFyIHRzID0gdHMgfHwge307XHJcbnRzLnRvbSA9IHRzLnRvbSB8fCB7fTtcclxudHMudG9tLmNvcmUgPSB0cy50b20uY29yZSB8fCB7fTtcclxuXHJcblxyXG4vKipcclxuICogQGV4cG9ydFxyXG4gKiBAcGFyYW0ge1JhbmdlfSByYW5nZVxyXG4gKiBAY29uc3RydWN0b3JcclxuICovXHJcbnRzLnRvbS5jb3JlLlNlbGVjdGlvbiA9IGZ1bmN0aW9uKHJhbmdlKSB7XHJcbiAgLyoqXHJcbiAgICogQHR5cGUge1JhbmdlfVxyXG4gICAqIEBwcml2YXRlXHJcbiAgICovXHJcbiAgdGhpcy5yYW5nZV8gPSByYW5nZTtcclxufTtcclxuXHJcblxyXG4vKipcclxuICogQGV4cG9ydFxyXG4gKiBAcmV0dXJuIHtBcnJheS48VGV4dD59XHJcbiAqL1xyXG50cy50b20uY29yZS5TZWxlY3Rpb24ucHJvdG90eXBlLmdldFRleHROb2RlcyA9IGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICAvKipcclxuICAgKiBAZXhwb3J0XHJcbiAgICogQHBhcmFtIHtUZXh0fHtzdGFydFBvc2l0aW9uLCBlbmRQb3NpdGlvbn19IGNvbnRhaW5lclxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBvZmZzZXRcclxuICAgKiBAcmV0dXJuIHtUZXh0fVxyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIHNwbGl0KGNvbnRhaW5lciwgb2Zmc2V0KSB7XHJcbiAgICB2YXIgcnAgPSBjb250YWluZXIuc3BsaXRUZXh0KG9mZnNldCk7XHJcbiAgICBycC5zdGFydFBvc2l0aW9uID0gY29udGFpbmVyLnN0YXJ0UG9zaXRpb24gKyB0cy50b20udXRpbHMuc3RyaW5nLmNvbXBhY3QoY29udGFpbmVyLmRhdGEpLmxlbmd0aDtcclxuICAgIHJwLmVuZFBvc2l0aW9uID0gY29udGFpbmVyLmVuZFBvc2l0aW9uO1xyXG4gICAgY29udGFpbmVyLmVuZFBvc2l0aW9uID0gcnAuc3RhcnRQb3NpdGlvbiAtIDE7XHJcbiAgICByZXR1cm4gcnA7XHJcbiAgfVxyXG5cclxuICB2YXIgc2MgPSAvKipAdHlwZSB7VGV4dH0qLyh0aGlzLnJhbmdlXy5zdGFydENvbnRhaW5lciksIGVjID0gLyoqQHR5cGUge1RleHR9Ki8odGhpcy5yYW5nZV8uZW5kQ29udGFpbmVyKSxcclxuICAgICAgc28gPSB0aGlzLnJhbmdlXy5zdGFydE9mZnNldCwgZW8gPSB0aGlzLnJhbmdlXy5lbmRPZmZzZXQ7XHJcbiAgdmFyIGJOb2RlcyA9IGRvY3VtZW50LmJvZHkuZGF0YS50Tm9kZXM7XHJcbiAgdmFyIHNpID0gYk5vZGVzLmluZGV4T2Yoc2MpO1xyXG4gIHZhciBzcnAgPSBzcGxpdChzYywgc28pO1xyXG4gIGlmIChzcnAubGVuZ3RoID4gMCkge1xyXG4gICAgYk5vZGVzLnNwbGljZShzaSArIDEsIDAsIHNycCk7XHJcbiAgfVxyXG4gIGlmIChlYyA9PT0gc2MpIHtcclxuICAgIGVjID0gc3JwO1xyXG4gICAgZW8gPSBlbyAtIHNvO1xyXG4gIH1cclxuICB2YXIgZWkgPSBiTm9kZXMuaW5kZXhPZihlYyk7XHJcbiAgdmFyIGVycCA9IHNwbGl0KGVjLCBlbyk7XHJcbiAgaWYgKGVycC5sZW5ndGggPiAwKSB7XHJcbiAgICBiTm9kZXMuc3BsaWNlKGVpICsgMSwgMCwgZXJwKTtcclxuICB9XHJcbiAgcmV0dXJuIGJOb2Rlcy5zbGljZShzaSArIDEsIGVpICsgMSk7XHJcbn07XHJcblxyXG5cclxuLyoqXHJcbiAqIEBleHBvcnRcclxuICogQHJldHVybiB7TnVtYmVyfVxyXG4gKi9cclxudHMudG9tLmNvcmUuU2VsZWN0aW9uLnByb3RvdHlwZS5nZXRJbmRleCA9IGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICB2YXIgY29udGFpbmVyID0gdGhpcy5yYW5nZV8uZW5kQ29udGFpbmVyO1xyXG4gIGlmICghKGNvbnRhaW5lciBpbnN0YW5jZW9mIFRleHQpIHx8ICEodGhpcy5yYW5nZV8uc3RhcnRDb250YWluZXIgaW5zdGFuY2VvZiBUZXh0KSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdpbGxlZ2FsIHNlbGVjdGlvbicpO1xyXG4gIH1cclxuICB2YXIgb2Zmc2V0ID0gdGhpcy5yYW5nZV8uZW5kT2Zmc2V0O1xyXG4gIHZhciBjSGVhZCA9IHRzLnRvbS51dGlscy5zdHJpbmcuY29tcGFjdChjb250YWluZXIuc3Vic3RyaW5nRGF0YSgwLCBvZmZzZXQpKTtcclxuICB2YXIgY0xlbmd0aCA9IGNIZWFkID8gY0hlYWQubGVuZ3RoIDogMDtcclxuICBpZiAoY0xlbmd0aCA8IDEpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignaWxsZWdhbCBzZWxlY3Rpb24nKTtcclxuICB9XHJcbiAgdmFyIGNUZXh0ID0gdHMudG9tLnV0aWxzLnN0cmluZy5jb21wYWN0KHRoaXMucmFuZ2VfLnRvU3RyaW5nKCkpO1xyXG4gIHJldHVybiB0cy50b20udXRpbHMuc3RyaW5nLnRpbWVzKGRvY3VtZW50LmJvZHkuZGF0YS50VGV4dC5zdWJzdHIoMCwgY29udGFpbmVyLnN0YXJ0UG9zaXRpb24gKyBjTGVuZ3RoKSwgY1RleHQpO1xyXG59O1xyXG5cclxuXHJcbi8qKlxyXG4gKiBAZXhwb3J0XHJcbiAqIEByZXR1cm4ge1NlbGVjdGlvbn1cclxuICovXHJcbnRzLnRvbS5jb3JlLlNlbGVjdGlvbi5wcm90b3R5cGUuZ2V0U2VsZWN0aW9uID0gZnVuY3Rpb24oKSB7XHJcbiAgdmFyIHNlbGVjdGlvbiA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTtcclxuICBpZiAoc2VsZWN0aW9uLnJhbmdlQ291bnQgPCAxKSB7XHJcbiAgICBzZWxlY3Rpb24uYWRkUmFuZ2UodGhpcy5yYW5nZV8pO1xyXG4gIH1cclxuICByZXR1cm4gc2VsZWN0aW9uO1xyXG59O1xyXG5cclxuXHJcbi8qKlxyXG4gKiBAZXhwb3J0XHJcbiAqIEBwYXJhbSB7c3RyaW5nPX0gb3B0X3RleHRcclxuICogQHBhcmFtIHtudW1iZXI9fSBvcHRfbnRoXHJcbiAqIEBwYXJhbSB7Ym9vbGVhbj19IG9wdF9zZWxlY3QgPSBmYWxzZSB3aGV0aGVyIHRvIHNlbGVjdCB0aGUgcmFuZ2VcclxuICogQHJldHVybiB7dHMudG9tLmNvcmUuU2VsZWN0aW9ufVxyXG4gKi9cclxudHMudG9tLmNvcmUuU2VsZWN0aW9uLmZyb20gPSBmdW5jdGlvbihvcHRfdGV4dCwgb3B0X250aCwgb3B0X3NlbGVjdCkge1xyXG4gIHZhciBzZWxlY3Rpb24gPSB3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7XHJcbiAgaWYgKCFvcHRfdGV4dCAmJiBzZWxlY3Rpb24ucmFuZ2VDb3VudCA+IDApIHtcclxuICAgIHJldHVybiBuZXcgdHMudG9tLmNvcmUuU2VsZWN0aW9uKHdpbmRvdy5nZXRTZWxlY3Rpb24oKS5nZXRSYW5nZUF0KDApKTtcclxuICB9XHJcbiAgdmFyIHJhbmdlID0gdHMudG9tLmNvcmUuU2VsZWN0aW9uLnJhbmdlRnJvbV8ob3B0X3RleHQsIG9wdF9udGgpO1xyXG4gIGlmIChvcHRfc2VsZWN0KSB7XHJcbiAgICBzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7XHJcbiAgICBzZWxlY3Rpb24uYWRkUmFuZ2UocmFuZ2UpO1xyXG4gIH1cclxuICByZXR1cm4gbmV3IHRzLnRvbS5jb3JlLlNlbGVjdGlvbihyYW5nZSk7XHJcbn07XHJcblxyXG5cclxuLyoqXHJcbiAqICByZXR1cm4gYW4gZW1wdHkgcmFuZ2Ugb2JqZWN0IHRoYXQgaGFzIGJvdGggb2YgaXRzIGJvdW5kYXJ5IHBvaW50cyBwb3NpdGlvbmVkIGF0XHJcbiAqICB0aGUgYmVnaW5uaW5nIG9mIHRoZSBkb2N1bWVudCB3aGVuIG5vIHBhcmFtZXRlcnMgYXJlIGdpdmVuLCBlbHNlIHJldHVybiBhbiByYW5nZVxyXG4gKiAgb2JqZWN0IHRoYXQgY29udGFpbnMgdGhlIG50aCBvY2N1cnJlbmNlIG9mIHRoZSBzcGVjaWZpZWQgdGV4dFxyXG4gKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gdGV4dCB0aGUgYmFzZSB0ZXh0XHJcbiAqIEBwYXJhbSB7bnVtYmVyfSBudGggPSAxIHRoZSBudGggaW5kZXhcclxuICogQHJldHVybiB7UmFuZ2V9IHRoZSByYW5nZSBjcmVhdGVkIHRoYXQgY29udGFpbnMgdGhlIHNwZWNpZmllZCB0ZXh0XHJcbiAqIEBwcml2YXRlXHJcbiAqL1xyXG50cy50b20uY29yZS5TZWxlY3Rpb24ucmFuZ2VGcm9tXyA9IGZ1bmN0aW9uKHRleHQsIG50aCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICAvKipcclxuICAgKiBAcGFyYW0ge1N0cmluZ30gc3RyXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGNvdW50XHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IGlzU3RhcnQgb25seSAxIG9yIDAgaXMgYWNjZXB0ZWRcclxuICAgKiBAcmV0dXJuIHtudW1iZXJ9XHJcbiAgICovXHJcbiAgZnVuY3Rpb24gb2Zmc2V0KHN0ciwgY291bnQsIGlzU3RhcnQpIHtcclxuICAgIGZvciAodmFyIGkgPSAwLCBqID0gMDsgaSA8IGNvdW50ICsgaXNTdGFydDsgaisrKSB7XHJcbiAgICAgIGlmICghL1xccysvbS50ZXN0KHN0cltqXSkpIHtcclxuICAgICAgICBpKys7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBqIC0gaXNTdGFydDtcclxuICB9XHJcblxyXG4gIGlmICghdGV4dCkge1xyXG4gICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHZhciBiVGV4dCA9IGRvY3VtZW50LmJvZHkuZGF0YS50VGV4dDtcclxuICAgIHZhciBiTm9kZXMgPSBkb2N1bWVudC5ib2R5LmRhdGEudE5vZGVzO1xyXG4gICAgdmFyIHJhbmdlID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTtcclxuICAgIHZhciBjVGV4dCA9IHRzLnRvbS51dGlscy5zdHJpbmcuY29tcGFjdCh0ZXh0KTtcclxuICAgIHZhciBpbmRleCA9IHRzLnRvbS51dGlscy5zdHJpbmcubnRoSW5kZXhPZihiVGV4dCwgY1RleHQsIG50aCB8fCAxKTtcclxuICAgIGlmIChpbmRleCA+IC0xKSB7XHJcbiAgICAgIHZhciBjU3RhcnRQb3MgPSBpbmRleCArIGJOb2Rlc1swXS5zdGFydFBvc2l0aW9uOy8vaW5jbHVkZSB0aGUgZmlyc3QgY2hhcmFjdGVyXHJcbiAgICAgIHZhciBjRW5kUG9zID0gY1N0YXJ0UG9zICsgY1RleHQubGVuZ3RoOy8vZXhjbHVkZSB0aGUgbGFzdCBjaGFyYWN0ZXJcclxuXHJcbiAgICAgIHZhciBzdGFydENvbnRhaW5lciA9IG51bGwsIGVuZENvbnRhaW5lciA9IG51bGw7XHJcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYk5vZGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIG5vZGUgPSBiTm9kZXNbaV07XHJcbiAgICAgICAgaWYgKCFzdGFydENvbnRhaW5lciAmJiBub2RlLmVuZFBvc2l0aW9uID49IGNTdGFydFBvcykge1xyXG4gICAgICAgICAgc3RhcnRDb250YWluZXIgPSBiTm9kZXNbaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChub2RlLnN0YXJ0UG9zaXRpb24gPj0gY0VuZFBvcykge1xyXG4gICAgICAgICAgZW5kQ29udGFpbmVyID0gYk5vZGVzW2kgLSAxXTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBpZiAoc3RhcnRDb250YWluZXIgIT09IG51bGwpIHtcclxuICAgICAgICBlbmRDb250YWluZXIgPSBlbmRDb250YWluZXIgfHwgYk5vZGVzW2JOb2Rlcy5sZW5ndGggLSAxXTtcclxuICAgICAgICB2YXIgc3RhcnRPZmZzZXQgPSBvZmZzZXQoc3RhcnRDb250YWluZXIuZGF0YSwgY1N0YXJ0UG9zIC0gc3RhcnRDb250YWluZXIuc3RhcnRQb3NpdGlvbiwgMSk7XHJcbiAgICAgICAgdmFyIGVuZE9mZnNldCA9IG9mZnNldChlbmRDb250YWluZXIuZGF0YSwgY0VuZFBvcyAtIGVuZENvbnRhaW5lci5zdGFydFBvc2l0aW9uLCAwKTtcclxuICAgICAgICByYW5nZS5zZXRTdGFydChzdGFydENvbnRhaW5lciwgc3RhcnRPZmZzZXQpO1xyXG4gICAgICAgIHJhbmdlLnNldEVuZChlbmRDb250YWluZXIsIGVuZE9mZnNldCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiByYW5nZTtcclxuICB9XHJcbn07XHJcblxyXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uKCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICBmdW5jdGlvbiBnZXRUZXh0Tm9kZXMoZWxlbWVudCkge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG4gICAgdmFyIG5vZGVzID0gW107XHJcbiAgICB2YXIgZWxlc1RvU2tpcCA9IHtcclxuICAgICAgZWxlbWVudHM6IFsnYXBwbGV0JywgJ2FyZWEnLCAnYmFzZScsICdiYXNlZm9udCcsICdiZG8nLCAnYnV0dG9uJywgJ2ZyYW1lJywgJ2ZyYW1lc2V0JywgJ2lmcmFtZScsXHJcbiAgICAgICAgJ2hlYWQnLCAnaHInLCAnaW1nJywgJ2lucHV0JywgJ2xpbmsnLCAnbWFwJywgJ21ldGEnLCAnbm9mcmFtZXMnLCAnbm9zY3JpcHQnLCAnb3B0Z3JvdXAnLFxyXG4gICAgICAgICdvcHRpb24nLCAncGFyYW0nLCAnc2NyaXB0JywgJ3NlbGVjdCcsICdzdHlsZScsICd0ZXh0YXJlYScsICd0aXRsZSddLFxyXG4gICAgICAvKipcclxuICAgICAgICogQHBhcmFtIHtFbGVtZW50fSBub2RlXHJcbiAgICAgICAqIEBwYXJhbSB7QXJyYXkuPHN0cmluZz58bnVsbH0gbGlzdFxyXG4gICAgICAgKiBAcmV0dXJuIHtib29sZWFufVxyXG4gICAgICAgKi9cclxuICAgICAgdGVzdDogZnVuY3Rpb24obm9kZSwgbGlzdCkge1xyXG4gICAgICAgIHZhciBlbGVtZW50cyA9IGxpc3QgfHwgdGhpcy5lbGVtZW50cztcclxuICAgICAgICByZXR1cm4gZWxlbWVudHMuaW5kZXhPZihub2RlLnRhZ05hbWUudG9Mb3dlckNhc2UoKSkgPiAtMTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBnZXRUZXh0Tm9kZXMobm9kZSkge1xyXG4gICAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gMyAmJiAvXFxTLy50ZXN0KG5vZGUuZGF0YSkpIHtcclxuICAgICAgICBub2Rlcy5wdXNoKG5vZGUpO1xyXG4gICAgICB9IGVsc2UgaWYgKG5vZGUubm9kZVR5cGUgPT09IDEgJiYgIWVsZXNUb1NraXAudGVzdChub2RlLCBudWxsKSkge1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBub2RlLmNoaWxkTm9kZXMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcclxuICAgICAgICAgIGdldFRleHROb2Rlcyhub2RlLmNoaWxkTm9kZXNbaV0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldFRleHROb2RlcyhlbGVtZW50KTtcclxuICAgIHJldHVybiBub2RlcztcclxuICB9XHJcblxyXG4gIHZhciBib2R5Tm9kZXMgPSBnZXRUZXh0Tm9kZXMoZG9jdW1lbnQuYm9keSksIHBvc2l0aW9uID0gMDtcclxuICB2YXIgY0JvZHlUZXh0ID0gJyc7XHJcbiAgYm9keU5vZGVzLmZvckVhY2goZnVuY3Rpb24oLyoqQHR5cGUge1RleHR9Ki9ub2RlKSB7XHJcbiAgICBub2RlLnN0YXJ0UG9zaXRpb24gPSBwb3NpdGlvbjtcclxuICAgIHZhciBjVGV4dCA9IHRzLnRvbS51dGlscy5zdHJpbmcuY29tcGFjdChub2RlLmRhdGEpO1xyXG4gICAgY0JvZHlUZXh0ICs9IGNUZXh0O1xyXG4gICAgcG9zaXRpb24gKz0gY1RleHQubGVuZ3RoO1xyXG4gICAgbm9kZS5lbmRQb3NpdGlvbiA9IHBvc2l0aW9uIC0gMTtcclxuICB9KTtcclxuICBkb2N1bWVudC5ib2R5LmRhdGEgPSB7XHJcbiAgICAvKipcclxuICAgICAqIEB0eXBlIHtBcnJheS48VGV4dD59XHJcbiAgICAgKi9cclxuICAgIHROb2RlczogYm9keU5vZGVzLFxyXG4gICAgLyoqXHJcbiAgICAgKiBAdHlwZSB7U3RyaW5nfVxyXG4gICAgICovXHJcbiAgICB0VGV4dDogY0JvZHlUZXh0XHJcbiAgfTtcclxufSk7XHJcblxyXG5cclxuIiwidmFyIHRzID0gdHMgfHwge307XHJcbnRzLnRvbSA9IHRzLnRvbSB8fCB7fTtcclxudHMudG9tLnV0aWxzID0gdHMudG9tLnV0aWxzIHx8IHt9O1xyXG50cy50b20udXRpbHMuc3RyaW5nID0gdHMudG9tLnV0aWxzLnN0cmluZyB8fCB7fTtcclxuXHJcblxyXG4vKipcclxuICogdGhlIHBvc2l0aW9uIG9mIHRoZSBudGggb2NjdXJyZW5jZSBvZiBzZWFyY2hTdHJpbmdcclxuICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnRcclxuICogQHBhcmFtIHtzdHJpbmd9IHNlYXJjaFN0cmluZ1xyXG4gKiBAcGFyYW0ge251bWJlcn0gbnRoID0gMVxyXG4gKiBAcmV0dXJuIHtudW1iZXJ9IHN0YXJ0IHBvc2l0aW9uIG9mIHRoZSBudGggb2NjdXJyZW5jZSBvZiA8ZW0+c2VhcmNoU3RyaW5nPC9lbT5cclxuICovXHJcbnRzLnRvbS51dGlscy5zdHJpbmcubnRoSW5kZXhPZiA9IGZ1bmN0aW9uKGNvbnRlbnQsIHNlYXJjaFN0cmluZywgbnRoKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIHZhciB0aW1lcyA9IDAsIGluZGV4ID0gLTI7XHJcbiAgbnRoID0gKG50aCA9IHBhcnNlSW50KG50aCwgMTApKSAmJiBudGggPiAwID8gbnRoIDogMTtcclxuICB3aGlsZSAodGltZXMgPCBudGggJiYgaW5kZXggIT09IC0xKSB7XHJcbiAgICBpbmRleCA9IGNvbnRlbnQuaW5kZXhPZihzZWFyY2hTdHJpbmcsIGluZGV4ICsgMSk7XHJcbiAgICB0aW1lcysrO1xyXG4gIH1cclxuICByZXR1cm4gaW5kZXg7XHJcbn07XHJcblxyXG5cclxuLyoqXHJcbiAqIHRoZSBvY2N1cnJlbmNlcyhpbmNsdWRlIHRoZSBwb3NpdGlvbnMpIG9mIHNlYXJjaFN0cmluZ1xyXG4gKiBAcGFyYW0ge3N0cmluZ30gY29udGVudFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gc2VhcmNoU3RyaW5nXHJcbiAqIEByZXR1cm4ge0FycmF5Ljx7bnRoLHBvc2l0aW9ufT59IGxpc3Qgb2YgdGhlIG9jY3VycmVuY2VzXHJcbiAqL1xyXG50cy50b20udXRpbHMuc3RyaW5nLm9jY3VycmVuY2VzID0gZnVuY3Rpb24oY29udGVudCwgc2VhcmNoU3RyaW5nKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIHZhciB0aW1lcyA9IDAsIHBvc2l0aW9uID0gLTIsIHJlc3VsdCA9IFtdO1xyXG4gIGlmIChzZWFyY2hTdHJpbmcubGVuZ3RoIDwgMSkge1xyXG4gICAgcmV0dXJuIFtcclxuICAgICAge250aDogTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLCBwb3NpdGlvbjogTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZfSxcclxuICAgICAge250aDogTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLCBwb3NpdGlvbjogLTF9XHJcbiAgICBdO1xyXG4gIH1cclxuICB3aGlsZSAocG9zaXRpb24gIT09IC0xKSB7XHJcbiAgICBwb3NpdGlvbiA9IGNvbnRlbnQuaW5kZXhPZihzZWFyY2hTdHJpbmcsIHBvc2l0aW9uICsgMSk7XHJcbiAgICBpZiAocG9zaXRpb24gPCAwKSB7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG4gICAgcmVzdWx0LnB1c2goe250aDogKyt0aW1lcywgcG9zaXRpb246IHBvc2l0aW9ufSk7XHJcbiAgfVxyXG4gIHJldHVybiByZXN1bHQ7XHJcbn07XHJcblxyXG5cclxuLyoqXHJcbiAqIHRoZSBvY2N1cnJlbmNlcyBvZiBzZWFyY2hTdHJpbmdcclxuICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnRcclxuICogQHBhcmFtIHtzdHJpbmd9IHNlYXJjaFN0cmluZ1xyXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XHJcbiAqL1xyXG50cy50b20udXRpbHMuc3RyaW5nLnRpbWVzID0gZnVuY3Rpb24oY29udGVudCwgc2VhcmNoU3RyaW5nKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIHZhciBvY2N1cnMgPSB0cy50b20udXRpbHMuc3RyaW5nLm9jY3VycmVuY2VzKGNvbnRlbnQsIHNlYXJjaFN0cmluZyk7XHJcbiAgdmFyIHRlbXAgPSBvY2N1cnNbb2NjdXJzLmxlbmd0aCAtIDFdO1xyXG4gIHJldHVybiB0ZW1wID8gdGVtcC5udGggOiAwO1xyXG59O1xyXG5cclxuXHJcbi8qKlxyXG4gKiBAcGFyYW0ge3N0cmluZ30gY29udGVudCBjb250ZW50IHRvIGJlIGNvbXBhY3RcclxuICogQHJldHVybiB7c3RyaW5nfSBjb21wYWN0ZWQgc3RyaW5nXHJcbiAqL1xyXG50cy50b20udXRpbHMuc3RyaW5nLmNvbXBhY3QgPSBmdW5jdGlvbihjb250ZW50KSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIHJldHVybiBjb250ZW50LnJlcGxhY2UoL1xccysvZ20sICcnKTtcclxufTtcclxuXHJcblxyXG4vKipcclxuICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnQgc3RyaW5nIHRvIGJlIHRyaW1tZWRcclxuICogQHJldHVybiB7c3RyaW5nfSB0cmltbWVkIHN0cmluZ1xyXG4gKi9cclxudHMudG9tLnV0aWxzLnN0cmluZy50cmltID0gZnVuY3Rpb24oY29udGVudCkge1xyXG4gICd1c2Ugc3RyaWN0JztcclxuICByZXR1cm4gY29udGVudC5yZXBsYWNlKC8oXlxccyopfChcXHMqJCkvZywgJycpO1xyXG59O1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=